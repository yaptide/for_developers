name: Deploy documentation content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    runs-on: ubuntu-latest
    env:
      POETRY_VIRTUALENVS_CREATE: false
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
            python-version: '3.12'
      - name: Clone backend repo
        uses: actions/checkout@v4
        with:
          repository: 'yaptide/yaptide'
          sparse-checkout: 
            - 'yaptide'
            - 'tests'
      - name: Update pip and install poetry
        run: |
          python3 -m pip install --upgrade pip
          pip install poetry
      - name: Install dependencies for documentation
        run: poetry install
      - name: Build site
        run: mkdocs build
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact if on main
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'site'
      - name: Deploy to GitHub Pages if on main
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        id: deployment
        uses: actions/deploy-pages@v4
